<% provide(:title, "Ruby") %>
<h1>Ruby</h1>
<p>Para interpolar strings, incluyes #{variable_name} dentro de las comillas. Por ejemplo, si apellido = "Acuña", "María #{apellido}" corresponde a "María Acuña".</p>
<p>Un array se puede declarar asignando a una variable los elementos separados por comas dentro de corchetes, o incluyéndolos dentro de Array.new(). Por ejemplo, arr = [1,2,3] ó arr = Array.new([1,2,3]).</p>
<p>Un array se puede iterar por medio del comando each utilizando la siguiente estructura: arr.each { |x| action x }. Invocamos el método each seguido de llaves, dentro de las cuales nombramos la variable que corresponderá a los elementos (en este caso x, pero se puede utilizar cualquier nombre) y posteriormente escribimos la acción que se realizará para cada uno de éstos. Por ejemplo, si arr = ["a", "b", "c"]; arr.each { |n| print "#{n} " } imprimirá: a b c.</p>
<p>Para declarar un hash vacío podemos utilizar h = {} ó h = Hash.new. Si queremos declarar un hash con parámetros lo podemos hacer incluyéndolos dentro de las llaves con las estructuras {"key" => value}, {:key => value} o {key: value}. En el primer caso accedemos mediante h["key"] y en los dos siguientes mediante h[:key]. Por ejemplo, usuario = {:nombre => "María", apellido: "Acuña"}.</p>
<p>Un hash se puede iterar con el comando each utilizando la misma lógica que con un array. El cambio es que en este caso no se itera sobre una variable, sino sobre dos, las cuales se deben separar por comas de la siguiente forma:  h.each { |x, y| print "#{x} es #{y} " }. En el caso del hash del punto anterior esto daría como resultado "nombre es María apellido es Acuña ".</p>
<p>Un block en ruby es un conjunto de código que se incluye dentro de llaves {}. Por ejemplo ('a'..'z').map { |letter| letter.upcase } retorna un arreglo con todas las letras del abecedario en mayúscula. En este caso, el código se ejecutó sobre la variable letter; sin embargo, también puede ejecutarse sin ninguna variable. Por ejemplo 2.times { print "Hola!" } retornaría "Hola!Hola!".</p>
<p>La convención en Ruby para nombrar variables es snake_case, es decir, separar las palabras utilizando underscore _. Por ejemplo, primer_nombre.</p>
<p>attr_reader, attr_writter y attr_accesor son <i>attribute accesors</i> que permiten crear getter y setter para los atributos de una clase. attr_reader crea el getter (que permite conocer el valor de un atributo), attr_writter crea el setter (que permite modificar el valor de un atributo) y attr_accesor crea los dos.</p>
